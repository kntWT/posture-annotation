user:
  post:
    description: create user
    tags:
      - user
    responses:
      '201':
        description: created
        content:
          application/json:
            schema:
              $ref: '../components/schemas/user.yaml#/UserCreate'
      '400':
        description: bad request
        content:
          application/json:
            schema:
              $ref: '../components/schemas/error.yaml#/BadRequest'
  get:
    description: get all users
    tags:
      - user
    responses:
      '200':
        description: ok
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '../components/schemas/user.yaml#/User'
      '403':
        description: forbidden
        content:
          application/json:
            schema:
              $ref: '../components/schemas/error.yaml#/Forbidden'
user_auth:
  get:
    description: get user by token
    tags:
      - user
    headers:
      token:
        description: user token
        required: true
        schema:
          type: string
          format: password
    responses:
      '200':
        description: ok
        content:
          application/json:
            schema:
              $ref: '../components/schemas/user.yaml#/User'
      '401':
        description: forbidden
        content:
          application/json:
            schema:
              $ref: '../components/schemas/error.yaml#/Unauthorized'
user_{id}:
  get:
    description: get user by id
    tags:
      - user
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
    responses:
      '200':
        description: ok
        content:
          application/json:
            schema:
              $ref: '../components/schemas/user.yaml#/User'
      '404':
        description: not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas/error.yaml#/NotFound'
  put:
    description: update user by id
    tags:
      - user
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
    responses:
      '200':
        description: ok
        content:
          application/json:
            schema:
              $ref: '../components/schemas/user.yaml#/User'
  delete:
    description: delete user by id
    tags:
      - user
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
    responses:
      '204':
        description: no content
      '403':
        description: forbidden
        content:
          application/json:
            schema:
              $ref: '../components/schemas/error.yaml#/Forbidden'
      '404':
        description: not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas/error.yaml#/NotFound'