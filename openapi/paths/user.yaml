user:
  post:
    description: create user
    operationId: createUser
    tags:
      - user
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "../components/schemas/user.yaml#/UserCreate"
    responses:
      "201":
        description: created
        content:
          application/json:
            schema:
              $ref: "../components/schemas/user.yaml#/User"
      "400":
        description: bad request
  get:
    description: get all users
    operationId: getUsers
    tags:
      - user
    responses:
      "200":
        description: ok
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "../components/schemas/user.yaml#/User"
      "403":
        description: forbidden
login:
  post:
    description: login user
    operationId: loginUser
    tags:
      - user
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "../components/schemas/user.yaml#/UserCreate"
    responses:
      "200":
        description: ok
        content:
          application/json:
            schema:
              $ref: "../components/schemas/user.yaml#/User"
      "400":
        description: bad request
      "401":
        description: unauthorized
user_auth:
  get:
    description: get user by token
    operationId: getUserByToken
    tags:
      - user
    parameters:
      - in: header
        name: Authorization
        description: user token
        required: true
        schema:
          type: string
          format: password
    responses:
      "200":
        description: ok
        content:
          application/json:
            schema:
              $ref: "../components/schemas/user.yaml#/User"
      "401":
        description: forbidden
is_exist:
  post:
    description: check if user exists
    operationId: isUserExist
    tags:
      - user
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "../components/schemas/user.yaml#/UserCreate"
    responses:
      "200":
        description: ok
        content:
          application/json:
            schema:
              type: boolean
      "400":
        description: bad request
user_{id}:
  get:
    description: get user by id
    operationId: getUserById
    tags:
      - user
    parameters:
      - $ref: "../components/parameters/id.yaml#/Id"
    responses:
      "200":
        description: ok
        content:
          application/json:
            schema:
              $ref: "../components/schemas/user.yaml#/User"
      "404":
        description: not found
  put:
    description: update user by id
    operationId: updateUserById
    tags:
      - user
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
    responses:
      "200":
        description: ok
        content:
          application/json:
            schema:
              $ref: "../components/schemas/user.yaml#/User"
  delete:
    description: delete user by id
    operationId: deleteUserById
    tags:
      - user
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
    responses:
      "204":
        description: no content
      "403":
        description: forbidden
      "404":
        description: not found
